#!/bin/bash
# Copyright (c) 2015, Stoney Jackson <dr.stoney@gmail.com>
# License: GPLv3

usage() {
    echo "usage:"
    echo "  $(basename "$0") init REPO [PATH]"
    echo "  $(basename "$0") update [PATH]"
}


init() {
    url="$1"
    if [ -z "$url" ] ; then
        usage
        exit 1
    fi
    path="$2"
    if [ -z "$path" ] ; then
        path="$(pwd)/$(basename "$url" .git)"
    fi
    if [ -d "$path/.dip" ] ; then
        echo "Target is already a dip: $path"
        usage
        exit 1
    fi

    mkdir -p "$path/.dip"
    echo ...........cloning local
    git clone --bare "$url" "$path/.dip/local.git" || rm -rf "$path/.dip"
    dip update "$path"
}


update() {
    path="$1"
    if [ -z "$path" ] ; then
        path="$(pwd)"
    fi
    if [ ! -d "$path/.dip" ] ; then
        echo "Not in a dip."
        usage
        exit 1
    fi
    echo .........update local
    git --git-dir="$path/.dip/local.git" fetch
    for branch in $(branches_to_delete); do
        echo .........deleting $branch
        rm -rf "$path/$branch"
    done
    for branch in $(branches_to_update); do
        echo .........updating $branch
        git --git-dir="$path/$branch/.git" pull
    done
    for branch in $(branches_to_clone); do
        echo .........cloning $branch
        git clone --branch "$branch" --single-branch "$path/.dip/local.git" "$path/$branch"
    done
}


branches_to_clone() {
    create_branch_files
    comm -2 -3 "$path/.dip/branches" "$path/.dip/branch_repos"
}


branches_to_delete() {
    create_branch_files
    comm -1 -3 "$path/.dip/branches" "$path/.dip/branch_repos"
}


branches_to_update() {
    create_branch_files
    comm -1 -2 "$path/.dip/branches" "$path/.dip/branch_repos"
}


create_branch_files() {
    if [ -z "$BRANCH_FILES_CREATED" ] ; then
        BRANCH_FILES_CREATED="true"
        branches > "$path/.dip/branches"
        branch_repos > "$path/.dip/branch_repos"
    fi
}


branches() {
    git --git-dir="$path/.dip/local.git" branch | tr '*' ' ' | sed 's/ //g'
}


branch_repos() {
    for i in "$path"/* ; do
        if [ -d "$i" ] ; then
            echo "$i" | sed 's|.*/||'
        fi
    done
}


command_exists() {
    command -v "$1" >/dev/null 2>&1
}


cmd="$1"
shift
if command_exists "$cmd" ; then
    "$cmd" "$@"
else
    echo "Unknown command $cmd"
    usage
    exit 1
fi
